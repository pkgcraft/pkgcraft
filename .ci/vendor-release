#!/usr/bin/env bash
# Create a vendored release.
# Requires a single argument of the target package name.

set -e

REPO_DIR=${PWD}
PACKAGE=$1

# build crate
cargo package -p ${PACKAGE}

pushd target/package >/dev/null

# determine release name
RELEASE=$(echo ${PACKAGE}-*.crate)
RELEASE=${RELEASE%.crate}

# rename old workdir
mv ${RELEASE} ${RELEASE}.old

# unpack crate
tar -zvxf ${RELEASE}.crate

pushd ${RELEASE} >/dev/null

# vendor dependencies
cargo vendor

# force cargo to use vendored packages
mkdir .cargo
cat > .cargo/config.toml <<-EOF
[source.crates-io]
replace-with = "vendored-sources"

[source.vendored-sources]
directory = "vendor"
EOF

# HACK: Use testdata dir from repo root for pkgcraft so the bundled, hidden
# files exist since `cargo vendor` strips them.
# (upstream issue: https://github.com/rust-lang/cargo/issues/13662)
if [[ -d vendor/pkgcraft/testdata ]]; then
	rm -rf vendor/pkgcraft/testdata
	cp -a testdata vendor/pkgcraft/testdata
fi

# remove unused, windows-only static libs to decrease archive size
#
# TODO: drop this once `cargo vendor` supports platform targeting:
# https://github.com/rust-lang/cargo/issues/7058
rm -rf vendor/winapi-*gnu*/lib/*.a
rm -rf vendor/windows_*gnu*/lib/*.a
rm -rf vendor/windows_*msvc*/lib/*.lib

popd >/dev/null

# move release to repo dir
mv ${RELEASE} ${REPO_DIR}
