name: bench

on:
  schedule:
    - cron: '37 6 13 * *'
  push:
    branches: ['**']
    paths:
      - "crates/*/benches/**"
      - ".github/workflows/bench.yml"
  workflow_dispatch:

jobs:
  bench:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout pkgcraft workspace
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Set up rust toolchain
      uses: dtolnay/rust-toolchain@stable
      id: rust

    - name: Restore cache
      uses: actions/cache/restore@v3
      id: restore-cache
      with:
        path: |
          ~/.cargo/bin
          target/criterion
        key: ${{ github.workflow }}-${{ github.job }}-${{ runner.os }}-rust-${{ steps.rust.outputs.cachekey }}-${{ github.run_id }}
        restore-keys: ${{ github.workflow }}-${{ github.job }}-${{ runner.os }}-rust-

    - name: Install cargo-criterion
      run: |
        # ignore return value since `cargo install` errors out when already installed
        cargo install cargo-criterion || true

    - name: Install protoc for arcanist
      uses: arduino/setup-protoc@v2
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Build
      run: cargo criterion --no-run

    - name: Benchmark
      run: cargo criterion --color always --output-format quiet

    - name: Remove old caches
      if: ${{ github.ref_name == 'main' && steps.restore-cache.outputs.cache-hit != 'true' }}
      continue-on-error: true
      run: |
        gh extension install actions/gh-actions-cache

        REPO=${{ github.repository }}
        BRANCH=${{ github.ref }}
        KEY=${{ github.workflow }}-${{ github.job }}-${{ runner.os }}-rust-

        # find matching caches
        mapfile -t cache_keys < <( gh actions-cache list -R $REPO -B $BRANCH --key $KEY --sort created-at --order desc | cut -f 1 )

        # remove all matching caches except the most recently created
        for key in ${cache_keys[@]:1}
        do
          gh actions-cache delete $key -R $REPO -B $BRANCH --confirm
        done

        exit 0
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Save cache
      if: ${{ github.ref_name == 'main' && steps.restore-cache.outputs.cache-hit != 'true' }}
      uses: actions/cache/save@v3
      with:
        path: |
          ~/.cargo/bin
          target/criterion
        key: ${{ steps.restore-cache.outputs.cache-primary-key }}
