name: pkgcraft-c-release

on:
  push:
    tags: [pkgcraft-c-*]
    branches: ['**']
    paths:
      - ".github/workflows/pkgcraft-c-release.yml"
  workflow_dispatch:

jobs:
  source:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - name: Checkout pkgcraft workspace
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Set up rust toolchain
      uses: dtolnay/rust-toolchain@stable
      id: rust

    - name: Create vendored release tarball
      run: .ci/vendor-tarball pkgcraft-c

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: source
        path: ./*.tar.xz
        if-no-files-found: error
        retention-days: 3

  linux:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu

    steps:
    - name: Checkout pkgcraft workspace
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Set build dir env
      run: echo build_dir=~/pkgcraft-c >> $GITHUB_ENV

    - name: Set up rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-c via binary package on Linux
      if: runner.os == 'Linux'
      run: curl -L https://github.com/lu-zero/cargo-c/releases/latest/download/cargo-c-x86_64-unknown-linux-musl.tar.gz | tar xvzf - -C ~/.cargo/bin

    - name: Build pkgcraft-c
      run: |
        cargo cinstall --version
        cargo cinstall --prefix="${build_dir}/usr" --profile release-strip -p pkgcraft-c

    - name: Mangle files and create tarball
      run: |
        # replace pkgconfig prefix
        find ${build_dir} -name pkgcraft.pc -exec sed -i '/^prefix=/cprefix=/usr' {} +

        tar \
          -cv -I "xz -9 -T0" -f ${{ github.ref_name }}-${{ matrix.target }}.tar.xz \
          -C ${build_dir} .

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: linux
        path: ./*.tar.xz
        if-no-files-found: error
        retention-days: 3

  publish:
    if: startsWith(github.ref, 'refs/tags/')
    needs: ["source", "linux"]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3

    - name: Create GitHub release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          source/*.tar.xz
          linux/*.tar.xz
        fail_on_unmatched_files: true
