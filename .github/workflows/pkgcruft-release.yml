name: pkgcruft-release

on:
  push:
    tags: ['pkgcruft-[0-9]*']
  workflow_dispatch:

jobs:
  shell:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Set up rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Generate files
      run: cargo run --bin pkgcruft completion --dir shell

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: shell
        path: shell
        if-no-files-found: error
        retention-days: 3

  source:
    if: startsWith(github.ref, 'refs/tags/')
    needs: shell
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Set up rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Create vendored release
      run: .ci/vendor-release pkgcruft

    - name: Install cargo-nextest
      uses: taiki-e/install-action@nextest

    - name: Run tests for vendored release
      run: |
        # copy vendored release outside of the workspace to avoid cargo errors
        cp -a ${{ github.ref_name }} ${HOME}
        pushd ${HOME}/${{ github.ref_name }}
        cargo nextest run --all-features --tests
        popd
        rm -rf ${HOME}/${{ github.ref_name }}

    - name: Download shell completion
      uses: actions/download-artifact@v4
      with:
        name: shell
        path: shell

    - name: Create archive
      run: |
        # move shell completion files into the release
        mv shell ${{ github.ref_name }}
        # create the release tarball
        tar -cv -I "xz -9 -T0" -f ${{ github.ref_name }}.tar.xz ${{ github.ref_name }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: source
        path: ./*.tar.xz
        if-no-files-found: error
        retention-days: 3

  linux:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - powerpc64le-unknown-linux-gnu
          - x86_64-unknown-linux-gnu

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Set up rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install cross
      run: cargo install cross --git https://github.com/cross-rs/cross

    - name: Build pkgcruft
      run: cross build --target ${{ matrix.target }} --profile release-strip -p pkgcruft

    - name: Create archive
      run: |
        tar -C target/${{ matrix.target }}/release-strip \
          -cv -I "xz -9 -T0" -f ${{ github.ref_name }}-${{ matrix.target }}.tar.xz \
          pkgcruft

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.ref_name }}-${{ matrix.target }}
        path: ./*.tar.xz
        if-no-files-found: error
        retention-days: 3

  publish:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [source, linux]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        merge-multiple: true

    - name: Create GitHub release
      uses: softprops/action-gh-release@v2
      with:
        files: artifacts/*.tar.xz
        fail_on_unmatched_files: true
